#!/bin/sh -e
# Test the chroma decoder, capturing the output.

usage () {
	echo >&2 "Usage: $0 [-a] [-I] [-V] [-n VERSION] [-s SYSTEM] [TEST ...]"
	exit 1
}

newonly=false
inputfiles=true
version=tmp
onlysystem=
videofiles=true
while getopts "aIn:s:V" c; do
	case "$c" in
	a)
		newonly=true
		;;
	I)
		inputfiles=false
		;;
	n)
		version="$OPTARG"
		;;
	s)
		onlysystem="$OPTARG"
		;;
	V)
		videofiles=false
		;;
	\?)
		usage
		;;
	esac
done
shift $(expr $OPTIND - 1)

testsuitedir="$(realpath $(dirname $0))"
testdatadir="$(realpath $testsuitedir/../ld-decode-testdata)"
ldddir="$(realpath $testsuitedir/../ld-decode)"

export PATH="$ldddir/tools/ld-ldstoefm:$PATH"
export LD_LIBRARY_PATH="$ldddir/tools/library:$LD_LIBRARY_PATH"

outdir="$testsuitedir/output/$version"
cachedir="$testsuitedir/cache"
tmpdir="/var/tmp/lddtest"

mkdir -p "$outdir" "$cachedir" "$tmpdir"

(cd "$ldddir" && git log -1) >"$outdir/git-revision.new"
if [ -f "$outdir/git-revision" ]; then
	if ! cmp -s "$outdir/git-revision" "$outdir/git-revision.new"; then
		echo >&2 "Different git revision in $outdir/git-revision"
		exit 1
	fi
fi
mv "$outdir/git-revision.new" "$outdir/git-revision"
commitdate=$(cd "$ldddir" && git log -1 --pretty=%cI)

verbose () {
	echo >&2 ">>> $*"
	"$@"
}

# Check that a .tbc file exists, decoding it from a .lds if not.
make_tbc () {
	tbc="$1"
	lds="$2"
	shift 2

	if [ -f "$tbc" ]; then
		return
	fi

	verbose $ldddir/ld-decode.py "$@" "$lds" "${tbc%.tbc}"
}

# Chroma-decode a capture.
decode () {
	system="$1"
	lds="$2"
	shift 2

	frame=
	stillframe=0
	use3d=
	while :; do
		case "$1" in
		--frame)
			# CAV frame to seek to in the input file
			frame="$2"
			shift 2
			;;
		--stillframe)
			# Frame (from 0) to seek to in the output file, for stills
			stillframe="$2"
			shift 2
			;;
		--3d|--3dmap)
			# Use 3D decoder, or 3D decoder showing motion map
			use3d="$1"
			shift 1
			;;
		*)
			# Remaining args are passed to the chroma decoder directly
			break
			;;
		esac
	done

	if [ -n "$onlysystem" -a "$system" != "$onlysystem" ]; then
		echo >&2 "Test skipped because it's not for $onlysystem: $testname"
		return
	fi

	if ! [ -f "$lds" ]; then
		echo >&2 "Test skipped because source file is missing: $testname"
		return
	fi

	if $newonly && [ -f "$outdir/$testname-output.png" ]; then
		echo >&2 "Test already done: $testname"
		return
	fi

	rm -f \
		"$outdir/$testname.FAILED" \
		"$outdir/$testname-input.png" \
		"$outdir/$testname-output.png" \
		"$outdir/$testname.avi"

	case "$system" in
	ntsc)
		inputsize=910x526
		if [ "$commitdate" '<' 2019-05-05 ]; then
			# Pre ebf68032f3b9653c9a660749e8d21c414f181cae
			outputsize=754x486
		else
			outputsize=760x488
		fi
		fps=30
		lddargs="--ntsc"
		;;
	pal)
		inputsize=1135x626
		if [ "$commitdate" '<' 2019-05-05 ]; then
			outputsize=922x576
		else
			outputsize=928x576
		fi
		fps=25
		lddargs="--pal"
		;;
	esac

	case "$lds" in
	*.r8)
		lddargs="$lddargs -f 8fsc --daa"
		;;
	esac

	# Name the cached .tbc after the .lds file, for reuse between tests.
	tbc="$cachedir/$(echo "$lds" | sed 's,/,_,g').tbc"
	rgb="$tmpdir/$testname.rgb"
	make_tbc "$tbc" "$lds" $lddargs

	if [ -f "$ldddir/tools/ld-comb-$system/main.cpp" ]; then
		decoder="$ldddir/tools/ld-comb-$system/ld-comb-$system"
		if [ -n "$use3d" ]; then
			decoder="$decoder --3d"
		fi
	else
		decoder="$ldddir/tools/ld-chroma-decoder/ld-chroma-decoder"
		if [ -n "$use3d" ]; then
			decoder="$decoder -f ${system}3d"
		fi
	fi
	rawframe=0
	if [ -n "$frame" ]; then
		frameno=$("$testsuitedir/picno-to-frame" "$tbc.json" "$frame")
		decoder="$decoder -s $frameno"
		rawframe=$(expr $frameno - 1)
	fi
	if [ "$use3d" = "--3dmap" ]; then
		decoder="$decoder --oftest"
	fi
	if ! verbose $decoder "$@" "$tbc" "$rgb"; then
		touch "$outdir/$testname.FAILED"
		return
	fi

	ffmpeg="ffmpeg -loglevel error -y"
	ffmpegout="$ffmpeg -f rawvideo -pix_fmt rgb48 -s $outputsize"

	if $inputfiles; then
		$ffmpeg -f rawvideo -pix_fmt gray16 -s $inputsize -r 1 \
			-ss $(expr $rawframe + $stillframe) -t 1 \
			-i $tbc "$outdir/$testname-input.png"
	fi
	$ffmpegout -r 1 \
		-ss $stillframe -t 1 \
		-i $rgb "$outdir/$testname-output.png"
	if $videofiles; then
		$ffmpegout -r $fps \
			-i $rgb -b:v 15000k -aspect 4:3 \
			-vcodec mpeg4 -flags +ilme+ildct \
			"$outdir/$testname.avi"
	fi
}

GGV1069="/n/stuff2/capture/laserdisc/GGV1069_CAV_NTSC_side1_2019-06-15_18-02-41.raw.oga"
GGV1011="/n/stuff2/capture/laserdisc/GGV1011_CAV_PAL_side1_DD1_2019-06-12_20-18-21.raw.oga"
all_tests="\
	snellwilcox snellwilcox3d 3dmap1 3dmap2 testcardg ntscbars palbars leon \
	nr-vbar nr-multiburst nr-white100 nr-black7.5 nr-compositetest nr-stairstep nr-bars \
	nr-magenta nr-cross nr-dot nr-stills nr-sweep nr-testcard nr-ramp nr-bounce nr-motion \
	pr-vbar pr-multiburst pr-white100 pr-black7.5 pr-pulsebar pr-stairstep pr-bars \
	pr-magenta pr-window pr-cross pr-dot pr-black0 pr-sweep pr-ramp pr-yramp pr-motion \
	"
run_test () {
	testname="$1"

	case "$testname" in
	snellwilcox)
		# Snell & Wilcox test pattern from "Video Essentials"
		decode ntsc "$testdatadir/ve-snw-cut.lds"
		;;
	snellwilcox3d)
		# Snell & Wilcox test pattern from "Video Essentials"
		decode ntsc "$testdatadir/ve-snw-cut.lds" --stillframe 15 --3d
		;;
	3dmap1)
		# 3D map -- this should have motion
		decode ntsc "$testdatadir/ve-snw-cut.lds" --stillframe 5 --3dmap
		;;
	3dmap2)
		# 3D map -- this should be still
		decode ntsc "$testdatadir/ve-snw-cut.lds" --stillframe 15 --3dmap
		;;
	testcardg)
		# BBC Test Card G from "Jason and the Argonauts"
		decode pal "$testdatadir/pal/jason-testpattern.lds"
		;;
	ntscbars)
		# SMPTE colour bars from GGV1069
		decode ntsc "$testdatadir/ggv_cbar_5500-v2800.lds"
		;;
	palbars)
		# BBC colour bars from "Jason and the Argonauts"
		decode pal "$testdatadir/pal/jason-cbar1.lds"
		;;
	leon)
		# A few seconds from "Leon", captured noisily with cxadc
		decode pal "/n/stuff2/capture/laserdisc/cap.leon.r8"
		;;

	# Tests from GGV1069, Pioneer's NTSC Reference Disc
	nr-vbar)
		# Crosstalk check; also tests that --frame gets the right frame
		decode ntsc "$GGV1069" --frame 115 -l 10
		;;
	nr-multiburst)
		decode ntsc "$GGV1069" --frame 951 -l 10
		;;
	nr-white100)
		decode ntsc "$GGV1069" --frame 1851 -l 10
		;;
	nr-black7.5)
		decode ntsc "$GGV1069" --frame 2751 -l 10
		;;
	nr-compositetest)
		decode ntsc "$GGV1069" --frame 3651 -l 10
		;;
	nr-stairstep)
		decode ntsc "$GGV1069" --frame 4551 -l 10
		;;
	nr-bars)
		decode ntsc "$GGV1069" --frame 5451 -l 10
		;;
	nr-magenta)
		decode ntsc "$GGV1069" --frame 7251 -l 10
		# Other solid colours follow; magenta is what the service manuals use.
		;;
	nr-cross)
		decode ntsc "$GGV1069" --frame 14451 -l 10
		;;
	nr-dot)
		decode ntsc "$GGV1069" --frame 15351 -l 10
		;;
	nr-stills)
		decode ntsc "$GGV1069" --frame 16251 -l 10
		;;
	nr-still*)
		# This is a loop of 21 images; use nr-still1 to nr-still21 to get them.
		# Not enabled by default because they're not very good quality.
		num=$(echo "$testname" | sed s/nr-still//)
		decode ntsc "$GGV1069" --frame $(expr 16200 + $num) -l 1
		;;
	nr-sweep)
		decode ntsc "$GGV1069" --frame 17151 -l 10
		;;
	nr-testcard)
		decode ntsc "$GGV1069" --frame 18051 -l 10
		;;
	nr-ramp)
		decode ntsc "$GGV1069" --frame 18951 -l 10
		;;
	nr-bounce)
		decode ntsc "$GGV1069" --frame 20751 -l 10
		;;
	nr-motion)
		decode ntsc "$GGV1069" --frame 23401
		;;

	# Tests from GGV1011, Pioneer's PAL Reference Disc
	pr-vbar)
		# Crosstalk check; also tests that --frame gets the right frame
		decode pal "$GGV1011" --frame 475 -l 10
		;;
	pr-multiburst)
		decode pal "$GGV1011" --frame 801 -l 10
		;;
	pr-white100)
		decode pal "$GGV1011" --frame 1551 -l 10
		;;
	pr-black7.5)
		decode pal "$GGV1011" --frame 2301 -l 10
		;;
	pr-pulsebar)
		decode pal "$GGV1011" --frame 3051 -l 10
		;;
	pr-stairstep)
		decode pal "$GGV1011" --frame 3801 -l 10
		;;
	pr-bars)
		decode pal "$GGV1011" --frame 4551 -l 10
		;;
	pr-magenta)
		decode pal "$GGV1011" --frame 6051 -l 10
		# Other solid colours follow
		;;
	pr-window)
		decode pal "$GGV1011" --frame 11301 -l 10
		;;
	pr-cross)
		decode pal "$GGV1011" --frame 12051 -l 10
		;;
	pr-dot)
		decode pal "$GGV1011" --frame 12801 -l 10
		;;
	pr-black0)
		decode pal "$GGV1011" --frame 13551 -l 10
		;;
	pr-sweep)
		decode pal "$GGV1011" --frame 14301 -l 10
		;;
	pr-ramp)
		decode pal "$GGV1011" --frame 15801 -l 10
		;;
	pr-yramp)
		decode pal "$GGV1011" --frame 17301 -l 10
		;;
	pr-motion)
		decode pal "$GGV1011" --frame 19501 --stillframe 20
		;;

	*)
		echo >&2 "Unknown test: $testname"
		exit 1
		;;
	esac
}

if [ $# -eq 0 ]; then
	for testname in $all_tests; do
		run_test "$testname"
	done
else
	for testname in "$@"; do
		run_test "$testname"
	done
fi
