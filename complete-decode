#!/bin/bash -e
# Run through the entire decoding process.

# FIXME: PAL/NTSC
# FIXME: Detect PCM deemphasis automatically
# FIXME: Do this with short PAL/NTSC CAV/CLV examples with -fsanitize={undefined,address}...

usage () {
	echo >&2 "Usage: $0 [-AcdDn] LDS-FILE [OUTPUT-BASE]"
	exit 1
}

analogue=true
digital=true
dropouts=false
deemph=()
dryrun=false
while getopts "AcdDn" c; do
	case "$c" in
	A)
		analogue=false
		;;
	c)
		dropouts=true
		;;
	d)
		deemph=(deemph)
		;;
	D)
		digital=false
		;;
	n)
		dryrun=true
		;;
	\?)
		usage
		;;
	esac
done
shift $(expr $OPTIND - 1)

if [ "$#" = 1 ]; then
	infile="$1"
	out=$(dirname "$1")/out/$(basename "$1" .lds)
elif [ "$#" = 2 ]; then
	infile="$1"
	out="$2"
else
	usage
fi

action () {
	if $dryrun; then
		echo >&2 "Would do:" "$@"
	else
		echo >&2 ">>>" "$@"
		"$@"
	fi
}

if [ ! -f "$out.tbc" ]; then
	action ld-decode.py --ntsc "$infile" "$out"
fi

if [ ! -f "$out.tbc.json.orig" ]; then
	# This doesn't produce a new file.
	action cp "$out.tbc.json" "$out.tbc.json.orig_"
	action ld-process-vbi -n "$out.tbc"
	action mv "$out.tbc.json.orig_" "$out.tbc.json.orig"
fi

if $digital && [ ! -f "$out.efm.pcm" ]; then
	action ld-process-efm --noninteractive "$out".efm "$out".efm.pcm
fi

if $digital && [ ! -f "$out.efm.flac" ]; then
	action sox \
		-t raw -e signed -b 16 -r 44100 -c 2 "$out".efm.pcm \
		"$out".efm.flac \
		"${deemph[@]}" \
		stats
fi

if $dropouts && [ ! -f "$out.doc" ]; then
	action ld-dropout-correct --overcorrect "$out".tbc "$out".doc
	corrected="$out".doc
elif ! $dropouts; then
	# Bypass the dropout corrector.
	corrected="$out".tbc
fi

if [ ! -f "$out.mkv" ]; then
	chargs=("$corrected")

	ffargs=(-f rawvideo -r 30000/1001 -pix_fmt rgb48 -s 760x488 -i -)
	streams=0
	if $digital; then
		ffargs+=(-i "$out".efm.flac)
		digstream=$streams
		streams=$(($streams + 1))
	fi
	if $analogue; then
		ffargs+=(-f s16le -ar 48000 -ac 2 -i "$out".pcm)
		anastream=$streams
		streams=$(($streams + 1))
	fi
	for i in $(seq 0 $streams); do
		ffargs+=(-map $i:0)
	done
	# Use yuvj444p for full range and no chroma subsampling.
	ffargs+=( \
		-pix_fmt yuvj444p \
		-filter:v setfield=tff \
		-codec:v libx264 -crf 16 -flags +ildct+ilme -aspect 4:3 \
	)
	if $digital; then
		ffargs+=(-codec:a:$digstream copy)
	fi
	if $analogue; then
		ffargs+=(-codec:a:$anastream flac)
	fi
	ffargs+=(-y "$out".mkv)

	action ld-chroma-decoder "${chargs[@]}" | \
	action ffmpeg "${ffargs[@]}"
fi
